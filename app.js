!function(e){var t={};function r(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(a,s,function(t){return e[t]}.bind(null,s));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e){e.exports=JSON.parse('[{"id":"TODO","entries":[{"id":"1","text":"Welcome to Trello"},{"id":"2","text":"This is a card"}]},{"id":"IN PROGRESS","entries":[{"id":"3","text":"Invite your team to this board using Add Members button"},{"id":"4","text":"Drag people onto a card to indicate that they\'re responsible for it"}]},{"id":"DONE","entries":[{"id":"5","text":"To learn more tricks, check out the guide"},{"id":"6","text":"Use as many boards as you want. We\'ll make more!"}]}]')},function(e,t,r){},function(e,t,r){"use strict";r.r(t);r(1);function a(e){const t=document.createElement("li");return t.classList.add("card"),t.dataset.cardId=e.id,t.innerHTML=`\n    <div class="card-header">\n      <span class="card-text">${e.text}</span>\n      <span class="card-delete visually-hidden">&#67755</span>\n    </div>\n  `,t}class s{getCards(){return JSON.parse(localStorage.getItem("cards"))||null}saveCards(e){localStorage.setItem("cards",JSON.stringify(e))}}var d=r(0);var n={name:{valueMissing:"Add card name, please"}};class o{constructor(){this.stateService=new s}init(){this.wrapper=document.createElement("div"),this.wrapper.classList.add("wrapper"),this.wrapper.innerHTML=this.stateService.getCards()||this.loadFromJSON(d),document.body.append(this.wrapper),this.closeAllForms(),[...this.wrapper.querySelectorAll(".card")].forEach(e=>{this.addCardListeners(e)}),this.addFooterListeners(),this.addWrapperListeners()}addCardListeners(e){e.addEventListener("mouseenter",e=>{e.preventDefault(),e.target.querySelector(".card-delete").classList.remove("visually-hidden")},!1),e.addEventListener("mouseleave",e=>{e.preventDefault(),e.target.querySelector(".card-delete").classList.add("visually-hidden")},!1),e.querySelector(".card-delete").addEventListener("click",e=>{e.preventDefault(),this.deleteCard(e.target.closest("li.card"))},!1)}addWrapperListeners(){const e=this.wrapper;e.addEventListener("mousedown",e=>{e.preventDefault(),this.dragStart(e)},!1),e.addEventListener("mousemove",e=>{e.preventDefault(),this.dragMove(e)},!1),e.addEventListener("mouseup",e=>{e.preventDefault(),this.dragEnd(e)},!1),e.addEventListener("mouseleave",e=>{e.preventDefault(),this.dragEnd()},!1)}dragStart(e){if(this.draggedCard=e.target.closest("li.card"),!this.draggedCard)return;this.ghostCard=this.draggedCard.cloneNode(!0),this.ghostCard.classList.add("draggedGhost"),this.draggedCard.classList.add("transparent");const{width:t,height:r,left:a,top:s}=this.draggedCard.getBoundingClientRect();this.ghostCard.style.width=t+"px",this.ghostCard.style.height=r+"px",this.ghostCard.style.top=s+"px",this.ghostCard.style.left=a+"px",document.body.appendChild(this.ghostCard),this.wrapper.style.cursor="grabbing",this.coordX=e.pageX-a,this.coordY=e.pageY-s}dragMove(e){if(!this.ghostCard)return;this.ghostCard.style.left=e.pageX-this.coordX+"px",this.ghostCard.style.top=e.pageY-this.coordY+"px";const t=document.elementFromPoint(e.clientX,e.clientY).closest("div.cards-column");if(t){const{height:r,top:a}=this.draggedCard.getBoundingClientRect(),s=document.elementFromPoint(e.clientX,e.clientY).closest("li.card");if(!s)return void t.querySelector("ul.cards-list").append(this.draggedCard);e.pageY<a-r/2?s.before(this.draggedCard):s.after(this.draggedCard)}}dragEnd(){this.draggedCard?(this.wrapper.style.cursor="default",this.draggedCard.classList.remove("transparent"),this.draggedCard=null,this.ghostCard.remove(),this.ghostCard=null,this.saveState()):this.ghostCard&&(this.ghostCard.remove(),this.ghostCard=null)}addFooterListeners(){[...document.querySelectorAll(".container__footer")].forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),this.addNewCardFormShow(e.target.closest(".cards-column").dataset.group)},!1),e.addEventListener("mouseenter",e=>{e.preventDefault(),e.target.querySelector(".container__footer-text:nth-child(2)").classList.add("container__footer-text_active")},!1),e.addEventListener("mouseleave",e=>{e.preventDefault(),e.target.querySelector(".container__footer-text:nth-child(2)").classList.remove("container__footer-text_active")},!1)})}addNewCardFormShow(e){const t=document.querySelector(`div[data-group="${e}"]`);t.querySelector(".container__footer").classList.add("visually-hidden");const r=function(e){const t=document.createElement("li");return t.classList.add("cardForm"),t.innerHTML=`\n    <form name="${e}" novalidate class="form">\n      <textarea class="form__input card" type="text" name="name" data-group="${e}" value="" required placeholder="Enter a title for this card..."></textarea>\n      <div class="form__input-button-holder">\n        <button type="submit" class="btn btn-green">Add Card</button>\n        <span class="icon-cancel">&#67755;</span>\n      </div>\n    </form>\n  `,t}(e);t.querySelector(".cards-list").append(r),r.querySelector(".icon-cancel").addEventListener("click",t=>{t.preventDefault(),this.addNewCardFormClose(e)},!1),r.querySelector(".btn").addEventListener("click",r=>{r.preventDefault();const a={group:e,value:t.querySelector(".form__input").value};this.createNewCard(a)},!1),this.wrapper.addEventListener("click",e=>{e.preventDefault(),e.target===this.wrapper&&this.closeAllForms()},!1),//! обработчик ктрл+ввод быстро не завёлся, отложил
r.querySelector(".form__input").focus()}createNewCard(e){const t=document.forms[e.group];let{error:r}=this;r&&(r.remove(),r=null);if(!t.checkValidity()){[...t.elements].filter(e=>e.validity.valid&&!e.classList.contains("btn")).forEach(e=>{e.classList.add("valid"),e.classList.remove("invalid")});const a=[...t.elements].find(e=>!e.validity.valid);a.focus(),a.classList.remove("valid"),a.classList.add("invalid");const s=a.validity;let d="Неизвестная ошибка";for(const e in s)s[e]&&(d=e);return r=document.createElement("div"),r.dataset.id="error",r.dataset.group=e.group,r.className="form-error",r.textContent=""+n[a.name][d],a.offsetParent.appendChild(r),r.style.top=a.offsetTop+a.offsetHeight+10+"px",r.style.left=a.offsetLeft+a.offsetWidth-r.offsetWidth-10+"px",void(this.error=r)}const s=a({id:""+(new Date).getTime(),text:e.value.replace(/\n/g,"<br>")});this.addNewCardFormClose(e.group);this.wrapper.querySelector(`div.cards-column[data-group="${e.group}"]`).querySelector(".cards-list").append(s),this.addCardListeners(s),this.saveState()}closeAllForms(){[...document.querySelectorAll("li.cardForm")].forEach(e=>{this.addNewCardFormClose(e.closest("div.cards-column").dataset.group)})}addNewCardFormClose(e){const t=document.querySelector(`div[data-group="${e}"]`);t.querySelector(".container__footer").classList.remove("visually-hidden"),t.querySelector("li.cardForm").remove(),[...document.querySelectorAll(`div.form-error[data-group="${e}"]`)].forEach(e=>e.remove())}deleteCard(e){e.remove(),this.saveState()}saveState(){this.stateService.saveCards(document.querySelector(".wrapper").innerHTML)}loadFromJSON(e){const t=document.createElement("div");return e.forEach(e=>{const r=function(e){const t=document.createElement("div");return t.classList.add("cards-column"),t.dataset.group=e,t.innerHTML=`\n    <div class="container__header">\n      <span class="container__header-text">${e}</span>\n    </div>\n\n    <div class="cards-container">\n      <ul class="cards-list">\n      </ul>\n    </div>\n\n    <div class="container__footer">\n      <span class="container__footer-text">+</span>&nbsp;\n      <span class="container__footer-text">Add another card</span>\n    </div>\n  `,t}(e.id),s=r.querySelector(".cards-list");e.entries.forEach(e=>{const t=a(e);s.append(t)}),t.append(r)}),t.innerHTML}}(new o).init()}]);
//# sourceMappingURL=app.js.map